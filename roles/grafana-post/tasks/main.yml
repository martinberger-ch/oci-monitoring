---
# tasks file for grafana

- name: Get infos on container Prometheus
  docker_container_info:
    name: grafana
  register: ipv4result
  tags: grafana

- name: Does container exist?
  debug:
    msg: "The container {{ 'exists' if ipv4result.exists else 'does not exist' }}"
  tags: grafana

- name: Print information about container
  debug:
    var: result.container.NetworkSettings.IPAddress
  when: ipv4result.exists
  tags: grafana

- name: Set Fact for Prometheus Docker IPv4
  set_fact:
    prometheus_ipv4: "{{ ipv4result.container.NetworkSettings.IPAddress }}"
  tags: grafana

- name: create directory if they don't exist
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  loop:
    - /etc/grafana/provisioning/datasources
    - /etc/grafana/provisioning/notifiers
    - /etc/grafana/provisioning/plugins
    - /etc/grafana/provisioning/dashboards
  tags: grafana

- name: Pull Grafana Docker Image
  community.docker.docker_image:
    name: "{{ docker_grafana_image }}"
    source: pull
  tags: grafana

- name: Create Grafana Container and start
  community.docker.docker_container:
    name: grafana
    image: "{{ docker_grafana_image }}"
    volumes:
      - "/etc/grafana/provisioning:/etc/grafana/provisioning"
    ports:
      - "0.0.0.0:3000:3000"
    restart_policy: always
    container_default_behavior: no_defaults
  tags: grafana

- name: Change Grafana default admin password
  community.docker.docker_container_exec:
    container: grafana
    command: /bin/bash -c "grafana-cli --homepath /usr/share/grafana admin reset-admin-password welcome1"
    chdir: /root
    user: root
  tags: grafana



- name: Grafana Data Source Configuration
  template:
    dest: /etc/grafana/provisioning/datasources/datasource.yml
    force: true
    src: datasource.yml.j2
    mode: 0644
  tags: grafana

- name: Grafana Data Source Dashboard Configuration
  template:
    dest: /etc/grafana/provisioning/dashboards/dashboard.yml
    force: true
    src: dashboard.yml.j2
    mode: 0644
  tags: grafana

- name: Grafana Data Source Dashboard Full
  template:
    dest: /etc/grafana/provisioning/dashboards/dashboard-full.json
    force: true
    src: dashboard-full.json.j2
    mode: 0644
  tags: grafana

- name: Grafana Data Source Dashboard Small
  template:
    dest: /etc/grafana/provisioning/dashboards/dashboard-small.json
    force: true
    src: dashboard-small.json.j2
    mode: 0644
  tags: grafana

- name: Restart a container
  community.docker.docker_container:
    name: grafana
    image: "{{ docker_grafana_image }}"
    state: started
    restart: yes
    container_default_behavior: no_defaults
  tags: grafana

- name: enable port 3000 in firewall rules
  firewalld:
    port: 3000/tcp
    state: enabled
  tags: grafana
